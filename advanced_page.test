<?php
/**
 * @file
 * Advanced page test
 *
 * Copyright (c) 2010-2011 Board of Trustees, Leland Stanford Jr. University
 * This software is open-source licensed under the GNU Public License Version 2 or later
 * The full license is available in the LICENSE.TXT file at the root of this repository
 */
class AdvancedPageTest extends DrupalWebTestCase {

  function setUp() {
    parent::setUp('advanced_page');
    $this->admin_user = $this->drupalCreateUser(array('administer advanced page', 'view advanced page list'));
    $this->any_user = $this->drupalCreateUser();
    $this->OnlyViewList_user = $this->drupalCreateUser(array('view advanced page list'));
    $this->own_user = $this->drupalCreateUser(array('administer advanced page', 'view advanced page list', 'create advanced_page content', 'edit own advanced_page content', 'delete own advanced_page content'));
  }

  public static function getInfo() {
    return array(
      'name' => 'Advanced Page functionality',
      'description' => 'Testing core functionality for advanced page',
      'group' => 'Advanced Page'
    );
  }

  /**
   * Test if the content type is created properly on install
   */
  function test_bundle() {
    $bundles = field_info_bundles('node');
    if(array_key_exists('advanced_page', $bundles)) {
      $this->assertTrue('Advanced page content type exists.');
    }
  }

  /**
   * Test if an anonymous/admin user can access the listing and settings page
   */
  function test_access() {

    $this->drupalLogin($this->any_user);
    $this->drupalGet('admin/config/system/advanced-page/settings');
    $this->assertResponse(403);
    $this->assertTrue(t('Anonymous user cannot access advanced page settings.'));
    $this->drupalLogout();

    $this->drupalLogin($this->admin_user);
    $this->drupalGet('admin/config/system/advanced-page');
    $this->assertResponse(200);
    $this->assertTrue(t('Admin user can access advanced page list.'));
    $this->drupalLogout();

    $this->drupalLogin($this->admin_user);
    $this->drupalGet('admin/config/system/advanced-page/settings');
    $this->assertResponse(200);
    $this->assertTrue(t('Admin user can access advanced page settings.'));
    $this->drupalLogout();

    // testing with the users has the permission 'view advanced page list'
    $this->drupalLogin($this->OnlyViewList_user);
    $this->drupalGet('admin/config/system/advanced-page');
    $this->assertResponse(200, t('Advanced page list was displayed.'));
    $this->drupalLogout();

    // testing for Anonymous user
    $this->drupalGet('admin/config/system/advanced-page');
    $this->assertResponse(403, t('Advanced page list is not accessible to anonymous user.'));
  }

  /**
   * Test if admin user can edit advanced pages
   */
  function test_editaccess() {
    // create a page using own user
    $this->drupalLogin($this->own_user);
    $node_details = array(
      'type' => 'advanced_page',
      'title' => 'testing advanced page',
      'field_advanced_page_status' => array(
          'und' => array(
            0 => array(
              'value' => 1,
              )
            ),
        ),
      );

    $node = $this->drupalCreateNode($node_details);
    $this->assertTrue($node->nid, t("!title created by @name", array('!title' => $node->title, '@name' => format_username($this->own_user))));
    $this->drupalLogout();

    // Authenticate user without edit permission
    $this->drupalLogin($this->admin_user);
    $this->drupalGet('node/' . $node->nid . '/edit');
    $this->assertResponse(403, "Authenticate user can not edit advanced pages.");
    $this->drupalLogout();

    // Anonymous page
    $this->drupalGet('node/' . $node->nid . '/edit');
    $this->assertResponse(403, "Anonymous user can not edit advanced pages.");
  }
}
